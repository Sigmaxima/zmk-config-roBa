#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos {
        compatible = "zmk,combos";

        mousebutton1 {
            bindings = <&mkp MB1>;
            key-positions = <18 19>;
        };

        mousebutton2 {
            bindings = <&mkp MB2>;
            key-positions = <20 19>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <>;
            layers = <0>;
            timeout-ms = <70>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <>;
            timeout-ms = <70>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <8 7>;
            layers = <0>;
            timeout-ms = <60>;
        };

        henkan {
            bindings = <&kp INTERNATIONAL_4>;
            key-positions = <6 7 8>;
            layers = <0>;
            timeout-ms = <75>;
        };

        muhenkan {
            bindings = <&kp INT_MUHENKAN>;
            key-positions = <1 2 3>;
            layers = <0>;
        };

        tenkeyslayer {
            bindings = <&tog 6>;
            key-positions = <18 19 20>;
        };

        leftparenthesis {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <25 24>;
            layers = <0>;
            timeout-ms = <40>;
        };

        rightparenthesis {
            bindings = <&kp NUHS>;
            key-positions = <25 26>;
            layers = <0>;
            timeout-ms = <40>;
        };

        leftbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <2 3>;
            layers = <0>;
            timeout-ms = <40>;
        };

        rightbrace {
            bindings = <&kp PIPE>;
            key-positions = <3 4>;
            layers = <0>;
            timeout-ms = <40>;
        };

        leftbracket {
            bindings = <&kp LS(N8)>;
            key-positions = <12 13>;
            layers = <0>;
            timeout-ms = <40>;
        };

        rightbracket {
            bindings = <&kp LS(N9)>;
            key-positions = <13 14>;
            layers = <0>;
            timeout-ms = <40>;
        };

        f1 {
            bindings = <&kp F1>;
            key-positions = <0 1>;
            layers = <0>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <1 2>;
            layers = <0>;
            timeout-ms = <30>;
        };

        f3 {
            bindings = <&kp F3>;
            key-positions = <10 11>;
            layers = <0>;
        };

        f4 {
            bindings = <&kp F4>;
            key-positions = <11 12>;
            layers = <0>;
            timeout-ms = <30>;
        };

        f5 {
            bindings = <&kp F5>;
            key-positions = <22 23>;
            layers = <0>;
        };

        f6 {
            bindings = <&kp F6>;
            key-positions = <23 24>;
            layers = <0>;
            timeout-ms = <30>;
        };

        f11 {
            bindings = <&kp F11>;
            key-positions = <35 36>;
            layers = <0>;
        };

        quit {
            bindings = <&kp LA(F4)>;
            key-positions = <11 12>;
            layers = <2>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        emacs_k_cut_to_end: emacs_k {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_SHIFT &kp END &kt LEFT_SHIFT &kp LC(X)>;
            label = "EMACS_K";
        };

        app_explorer: app_explorer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(R)>,
                <&macro_wait_time 20>,
                <&kp E &kp X &kp P &kp L &kp O &kp R &kp E &kp R &kp ENTER>;

            label = "APP_EXPLORER";
        };

        app_teams: app_teams {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(R)>,
                <&macro_wait_time 20>,
                <&kp M &kp S &kp T &kp E &kp A &kp M &kp S &kp ENTER>;

            label = "APP_TEAMS";
        };

        app_word: app_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(R)>,
                <&macro_wait_time 20>,
                <&kp W &kp I &kp N &kp W &kp O &kp R &kp D &kp ENTER>;

            label = "APP_WORD";
        };

        app_excel: app_excel {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(R)>,
                <&macro_wait_time 20>,
                <&kp E &kp X &kp C &kp E &kp L &kp ENTER>;

            label = "APP_EXCEL";
        };

        app_calculator: app_onenote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(R)>,
                <&macro_wait_time 20>,
                <&kp C &kp A &kp L &kp C &kp ENTER>;

            label = "APP_ONENOTE";
        };

        app_onenote: app_calculator {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(R)>,
                <&macro_wait_time 20>,
                <&kp O &kp N &kp E &kp N &kp O &kp T &kp E &kp ENTER>;

            label = "APP_CALCULATOR";
        };

        app_edge: app_edge {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(R)>,
                <&macro_wait_time 20>,
                <&kp M &kp S &kp E &kp D &kp G &kp E &kp ENTER>;

            label = "APP_EDGE";
        };

        app_powerpoint: app_firefox {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(R)>,
                <&macro_wait_time 20>,
                <&kp P &kp O &kp W &kp E &kp R &kp P &kp N &kp T &kp ENTER>;

            label = "APP_FIREFOX";
        };

        app_firefox: app_powerpnt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(R)>,
                <&macro_wait_time 20>,
                <&kp F &kp I &kp R &kp E &kp F &kp O &kp X &kp ENTER>;

            label = "APP_POWERPNT";
        };

        app_outlook: app_outlook {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(R)>,
                <&macro_wait_time 20>,
                <&kp O &kp U &kp T &kp L &kp O &kp O &kp K &kp ENTER>;

            label = "APP_OUTLOOK";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        lt_to_layer_0_bs: lt_to_layer_0_bs {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TO_LAYER_0_BS";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <600>;
        };

        macro_emacs: macro_emacs {
            compatible = "zmk,behavior-hold-tap";
            label = "MACRO_EMACS";
            bindings = <&emacs_k_cut_to_end>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: scroll_up_down {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "SCROLL_UP_DOWN";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;
        };

        tap_and_hold: tap_and_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_AND_HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        mo_kp: mo_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESCAPE Q      &kp W             &kp E           &kp R                             &kp T                                                                           &kp Y                 &kp U        &lt 5 I    &mt MINUS O        &kp P
&kp A             &mt LEFT_SHIFT S  &mt LEFT_ALT D  &mt LCTRL F                       &kp G                   &none                                 &kp LEFT_BRACKET  &kp H                 &mt RCTRL J  &lt 5 K    &mt RIGHT_SHIFT L  &tap_and_hold MINUS ENTER
&mt LEFT_SHIFT Z  &kp X             &kp C           &kp V                             &kp B                   &kp TAB                               &kp DELETE        &kp N                 &kp M        &kp COMMA  &kp DOT            &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_WIN      &kp LEFT_ALT    &lt_to_layer_0 2 INTERNATIONAL_5  &lt_to_layer_0 2 SPACE  &lt_to_layer_0 1 INTERNATIONAL_4      &kp BACKSPACE     &lt_to_layer_0 3 RET                                             &mt RCTRL INT1
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4  &kp F5                               &app_calculator  &app_explorer  &app_word           &app_excel    &app_powerpoint
&kp F6   &kp F7   &kp F8   &kp F9  &kp F10  &trans      &kp C_PREVIOUS  &kp C_REWIND     &kp C_PP       &kp C_FAST_FORWARD  &kp C_NEXT    &kp C_MUTE
&kp F11  &kp F12  &kp F13  &trans  &trans   &trans      &trans          &app_onenote     &app_teams     &app_outlook        &app_firefox  &app_edge
&trans   &trans   &trans   &trans  &trans   &trans      &trans          &trans                                                            &trans
            >;
        };

        NUM {
            bindings = <
&kp EXCLAMATION       &kp LS(N2)            &kp HASH                &kp DOLLAR       &kp PERCENT                                           &kp LS(NUMBER_6)   &kp LS(N7)  &kp LS(N8)                &kp LS(N9)  &kp EQUAL
&kp LC(A)             &mt LEFT_SHIFT LC(S)  &mt LEFT_ALT LS(MINUS)  &mt LCTRL SLASH  &kp LS(SQT)  &trans             &kp LS(LEFT_BRACKET)  &kp LS(SEMI)       &kp MINUS   &macro_emacs 0 SEMICOLON  &kp SQT     &kp INTERNATIONAL_3
&mt LEFT_SHIFT LC(Z)  &kp LC(X)             &kp LC(C)               &kp LC(V)        &kp LG(V)    &kp LS(LC(V))      &kp LS(EQUAL)         &kp RIGHT_BRACKET  &kp NUHS    &kp RIGHT_BRACE           &kp PIPE    &kp SLASH
&trans                &trans                &trans                  &kp PRINTSCREEN  &trans       &kp LS(LC(M))      &kp LS(CAPS)          &kp LC(LS(X))                                                        &kp INT1
            >;

            sensor-bindings = <&inc_dec_kp LC(KP_PLUS) LC(KP_MINUS)>;
        };

        ARROW {
            bindings = <
&mt ESCAPE N1             &kp N2           &kp N3        &kp N4       &kp N5                                     &kp LA(UP_ARROW)  &kp LC(PAGE_UP)  &kp UP_ARROW     &kp LC(PAGE_DOWN)  &kp BACKSPACE
&kp N6                    &kp N7           &kp N8        &kp N9       &kp N0   &trans             &kt PAGE_UP    &kp LC(LEFT)      &kp LEFT         &kp DOWN         &kp RIGHT          &kp LC(RIGHT)
&mt LEFT_SHIFT KP_DIVIDE  &kp KP_ASTERISK  &kp KP_MINUS  &kp KP_PLUS  &kp DOT  &kp LS(MINUS)      &kp PAGE_DOWN  &trans            &kp HOME         &kp RIGHT_SHIFT  &kp END            &kp RIGHT_SHIFT
&trans                    &trans           &trans        &trans       &trans   &trans             &trans         &trans                                                                 &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp LC(KP_PLUS) LC(KP_MINUS)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &mkp MB3  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mo 5     &mkp MB2  &kp RCTRL
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &kp RIGHT_SHIFT
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&trans  &kp LG(LS(LEFT))  &kp LG(UP_ARROW)    &kp LG(LS(RIGHT))  &trans                      &kp LG(UP_ARROW)  &kp LC(PAGE_UP)  &mkp MB3   &kp LC(PAGE_DOWN)  &none
&trans  &kp LG(LEFT)      &kp LG(DOWN_ARROW)  &kp LG(RIGHT)      &trans  &trans      &trans  &kp LG(DOWN)      &mkp MB1         &trans     &mkp MB2           &kp RIGHT_CONTROL
&trans  &trans            &kp LG(TAB)         &trans             &trans  &trans      &mo 7   &kp LG(TAB)       &mkp MB4         &kp LC(W)  &mkp MB5           &kp RIGHT_SHIFT
&trans  &trans            &trans              &trans             &trans  &trans      &trans  &trans                                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(MINUS) LS(LC(MINUS))>;
        };

        TEN_KEYS {
            bindings = <
&trans  &trans          &kp UP          &trans     &trans                             &kp SLASH     &kp N7  &kp N8  &kp N9  &kp MINUS
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans      &kp LS(MINUS)  &kp LS(APOS)  &kp N4  &kp N5  &kp N7  &kp LS(SEMI)
&trans  &trans          &trans          &trans     &trans  &trans      &kp TAB        &kp N0        &kp N1  &kp N2  &kp N3  &kp DOT
&trans  &trans          &trans          &trans     &trans  &trans      &trans         &kp N0                                &kp RETURN
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        CONFIG {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                               &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans          &trans       &trans  &trans  &trans  &trans  &trans
&trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans        &bt BT_CLR      &bootloader  &trans  &trans  &trans  &trans  &bt BT_CLR
&trans        &trans        &trans        &trans        &trans        &trans          &trans       &trans                          &bt BT_CLR_ALL
            >;
        };
    };
};
