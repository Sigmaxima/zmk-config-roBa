#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10  // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};


/ {
    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp DELETE>;
            key-positions = <9 21>;
            layers = <0>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <8 7>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESCAPE Q      &kp W         &kp E         &kp R          &kp T                                                                                   &kp Y                   &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &kp D         &kp F          &kp G                   &none                              &lt_to_layer_0 1 F6          &kp H                   &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V          &kp B                   &kp DELETE                         &kp BACKSPACE                &kp N                   &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &mt LCTRL TAB  &lt_to_layer_0 2 SPACE  &lt_to_layer_0 2 INT_MUHENKAN      &lt_to_layer_0 3 INT_HENKAN  &lt_to_layer_0 3 SPACE                             &lt_to_layer_0 7 INT1
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4  &kp F5                        &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&kp F6   &kp F7   &kp F8   &kp F9  &kp F10  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F11  &kp F12  &kp F13  &trans  &trans   &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans   &trans   &trans   &trans  &trans   &trans      &trans   &trans                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp EXCLAMATION  &kp LS(N2)  &kp HASH  &kp DOLLAR  &kp PERCENT                              &kp LS(N7)         &kp LS(N7)        &kp LS(N8)       &kp LS(N9)  &kp MINUS
&kp TAB          &kt CAPS    &trans    &trans      &kp PRINTSCREEN  &trans      &kp INSERT  &kp EXCLAMATION    &kp LEFT_BRACKET  &kp SEMICOLON    &kp SQT     &kp INT_YEN
&trans           &trans      &trans    &trans      &trans           &trans      &trans      &kp RIGHT_BRACKET  &kp SLASH         &kp RIGHT_BRACE  &kp PIPE    &kp INT1
&trans           &trans      &trans    &trans      &trans           &trans      &trans      &trans                                                            &kp CARET
            >;
        };

        ARROW {
            bindings = <
&mt ESCAPE N1  &kp N2        &kp N3           &kp N4           &kp N5                                        &trans  &trans    &kp UP_ARROW  &kp MINUS  &kp BACKSPACE
&kp N6         &kp N7        &kp N8           &kp N9           &kp N0       &trans            &kt PAGE_UP    &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &kp RIGHT_CONTROL
&kp LSHIFT     &kp KP_SLASH  &kp KP_ASTERISK  &kp KP_SUBTRACT  &kp KP_PLUS  &kp KP_EQUAL      &kp PAGE_DOWN  &trans  &kp HOME  &trans        &kp END    &kp RIGHT_SHIFT
&trans         &trans        &trans           &trans           &trans       &trans            &trans         &trans                                     &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &kp F5    &kp LC(PAGE_UP)  &mo 5     &kp LC(PAGE_DOWN)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp RC(W)  &trans    &mkp MB1         &mkp MB3  &mkp MB2           &kp RCTRL
&trans  &trans  &trans  &trans  &trans  &trans      &trans     &mkp MB5  &mkp MB4         &trans    &trans             &kp RIGHT_SHIFT
&trans  &trans  &trans  &trans  &trans  &trans      &trans     &trans                                                  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans            &trans  &trans  &trans  &trans                      &trans    &kp LC(PAGE_UP)  &trans    &kp LC(PAGE_DOWN)  &trans
&trans            &trans  &trans  &trans  &trans  &trans      &trans  &trans    &mkp MB1         &mkp MB3  &mkp MB2           &kp RIGHT_CONTROL
&trans            &trans  &trans  &trans  &trans  &trans      &mo 6   &mkp MB5  &mkp MB4         &trans    &trans             &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                  &trans
            >;
        };

        layer_6 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                               &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans          &trans       &trans  &trans  &trans  &trans  &trans
&trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans        &bt BT_CLR      &bootloader  &trans  &trans  &trans  &trans  &bt BT_CLR
&trans        &trans        &trans        &trans        &trans        &trans          &trans       &trans                          &bt BT_CLR_ALL
            >;
        };

        ZIP_MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &kp F5    &kp LC(PAGE_UP)  &mo 5     &kp LC(PAGE_DOWN)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp RC(W)  &trans    &mkp MB1         &mkp MB3  &mkp MB2           &kp RCTRL
&trans  &trans  &trans  &trans  &trans  &trans      &trans     &mkp MB5  &mkp MB4         &trans    &trans             &kp RIGHT_SHIFT
&trans  &trans  &trans  &trans  &trans  &trans      &trans     &trans                                                  &trans
            >;
        };
    };
};
